// https://practice.geeksforgeeks.org/problems/longest-increasing-subsequence/0


#include<bits/stdc++.h>
using namespace std;
#define inf 100000000000000000
#define ll long long int
#define pb push_back
#define f first
#define s second
#define mod 1000000007
#define fast ios_base::sync_with_stdio(false),cin.tie(NULL),cout.tie(NULL)
void mahakal(){
	#ifndef ONLINE_JUDGE
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	freopen("error.txt","w",stderr);
	#endif
}

ll  solve(ll* arr , ll n){
	vector<ll> vec;
	for(ll i=0;i<n ;i++){
		ll j = lower_bound(vec.begin(),vec.end(),arr[i])-vec.begin();
		if(j==vec.size()){
			vec.pb(arr[i]);
		}
		else{
			vec[j]=arr[i];
		}
	}
    ll ans = (ll)vec.size();
    return ans;
}

int main(){
	mahakal();fast;

	ll t;
	cin>>t;
	while(t--){
		ll n ;
		cin>>n;
		ll arr[n];
		for(ll i=0;i<n;i++){
			cin>>arr[i];
		}

		ll ans = solve(arr , n);
		cout<<ans<<endl;
	}

	return 0;
}
