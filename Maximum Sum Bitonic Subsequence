//  https://practice.geeksforgeeks.org/problems/maximum-sum-bitonic-subsequence/0


#include<bits/stdc++.h>
using namespace std;
#define inf 100000000000000000
#define ll long long int
#define pb push_back
#define f first
#define s second
#define mod 1000000007
#define fast ios_base::sync_with_stdio(false),cin.tie(NULL),cout.tie(NULL)
void mahakal(){
	#ifndef ONLINE_JUDGE
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	freopen("error.txt","w",stderr);
	#endif
}

ll solve(ll* arr , ll n){
	ll dp1[n], dp2[n];
	dp1[n-1]=arr[n-1];
	dp2[0]=arr[0];
	for(ll i=n-2;i>=0 ;i--){
		ll mx = 0;
		for(ll j = i+1 ; j<n ;j++){
			if(arr[i]>arr[j]){
				mx = max(mx ,dp1[j]);
			}
		}
		dp1[i]=mx+arr[i];
	}
	for(ll i=1 ;i<n ;i++){
		ll mx =0;
		for(ll j=0;j<i;j++){
			if(arr[i]>arr[j]){
				mx = max(mx , dp2[j]);
			}
		}
		dp2[i]=mx + arr [i];
	}
	ll mx=0;
	for(ll i=0;i<n;i++){
		mx = max(mx , dp1[i]+dp2[i]-arr[i]);
	}
	return mx ;
}

int main(){
	mahakal();fast;

	ll t;
	cin>>t;
	while(t--){
		ll n ;
		cin>>n ;
		ll arr[n];
		for(ll i=0;i<n;i++){
			cin>>arr[i];
		}

		ll ans = solve(arr , n);
		cout<<ans<<endl;
	}

	return 0;
}
