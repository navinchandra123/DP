// https://www.geeksforgeeks.org/largest-divisible-pairs-subset/

#include<bits/stdc++.h>
using namespace std;
#define inf 100000000000000000
#define ll long long int
#define pb push_back
#define f first
#define s second
#define mod 1000000007
#define fast ios_base::sync_with_stdio(false),cin.tie(NULL),cout.tie(NULL)
void mahakal(){
	#ifndef ONLINE_JUDGE
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	freopen("error.txt","w",stderr);
	#endif
}

ll solve(ll* arr , ll n){
	ll dp[n+1];
	dp[n-1]=1;
	sort(arr,arr+n);
	for(ll i=n-2 ;i>=0;i--){
		ll mx=1;
		for(ll j=i+1;j<n;j++){
			if(arr[j]%arr[i]==0)
				mx=max(mx,dp[j]);
		}
		dp[i]=1+mx;
	}
	ll ans = *max_element(dp , dp+n);
	return ans;
}

int main(){
	mahakal();fast;

	ll t;
	cin>>t;
	while(t--){
		ll n ;
		cin>>n;
		ll arr[n];
		for(ll i=0;i<n;i++){
			cin>>arr[i];
		}

		ll ans=solve(arr , n);
		cout<<ans<<endl;
	}

	return 0;
}
